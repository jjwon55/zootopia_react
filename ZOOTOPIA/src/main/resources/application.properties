spring.application.name=security

# 서버 포트 설정
server.port=8080

# 한글 인코딩 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# 데이터 소스 - MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/thejoeun?serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true

# 개발 데이터베이스
# spring.datasource.username=root
# spring.datasource.password=123456

# 배포 데이터베이스
spring.datasource.username=user
spring.datasource.password=12345678

# Mybatis 설정
# Mybatis 설정 경로      : ~/resources/mybatis-config.xml
# mybatis.config-location=classpath:mybatis-config.xml

# 컬럼명을 변수명으로 자동매핑 :  board_no ➡ boardNo
mybatis.configuration.map-underscore-to-camel-case=true
# resultType 속성에서 dto 객체 (패키지.클래스명) ➡ (클래스명)

mybatis.type-aliases-package=com.aloha.zootopia.domain


# Mybatis 매퍼 파일 경로 : ~/메인패키지/mapper/**Mapper.xml
mybatis.mapper-locations=classpath:com/aloha/zootopia/mapper/**/**.xml


# PageHelper 설정
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


spring.thymeleaf.cache=false

# 로깅 설정
logging.level.com.aloha.zootopia=DEBUG
logging.level.org.springframework.web=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n


# Thymeleaf Spring Security 통합 모듈 CSRF 자동 추가 비활성화
# spring.thymeleaf.extras.springsecurity5.csrf-enabled=false

# 파일 업로드 설정
app.file.upload.path=c:/upload
file.upload.path=c:/upload

# 로깅 설정
logging.level.org.springframework.security=DEBUG


# TODO
# server.tomcat.max-http-form-post-size: 10MB
# server.tomcat.server.tomcat.max-http-form-post-size= 10485760
# 참고할 구글 검색어 및 블로그 : 스프링부트 멀티파트 한 요청에 대한 개수 제한 / https://dev-coco.tistory.com/184

# Multipart (파일 업로드) 설정
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=100MB
# spring.servlet.multipart.max-request-parts=2000

# Tomcat 파라미터 개수 제한 설정
server.tomcat.max-parameter-count=100000

server.tomcat.max-swallow-size=10MB

spring.servlet.multipart.file-size-threshold=1MB
spring.servlet.multipart.enabled=true
# 아래는 톰캣의 개수 제한 (기본은 1000개인데 커스터마이징 필요할 수도 있음)
server.tomcat.max-http-form-post-size=100MB

# OAuth2 로그인 설정 (네이버)
spring.security.oauth2.client.registration.naver.client-id=lSrZgLuKgeh2qUDO3ENb
spring.security.oauth2.client.registration.naver.client-secret=9vOlrIDb72
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://192.168.30.51:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=email, name

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

### Toss Payments 설정 ###
toss.pay.client-key=${TOSS_CLIENT_KEY:}
toss.pay.secret-key=${TOSS_SECRET_KEY:}
toss.pay.success-url=http://localhost:5173/pay/toss/success
toss.pay.fail-url=http://localhost:5173/pay/toss/fail

# Kakao OAuth (실제 카카오 계정 로그인용)
# 발급 받은 REST API 키/Secret 및 redirect URI 등록
# kakao.oauth.client-id=${KAKAO_OAUTH_CLIENT_ID:}
# kakao.oauth.client-secret=${KAKAO_OAUTH_CLIENT_SECRET:}
# kakao.oauth.redirect-uri=http://localhost:8080/auth/kakao/callback


com.aloha.zootopia.secret-key=2Pyq[MyRMH(DxP'K)ONVI\LB29GD:xbB]?`\{ogZ[}#*)hx7/~68FxK2)HJdCPZ#A&[CBg{v9+T2c122

 # MyBatis SQL 로깅 설정
 logging.level.com.aloha.zootopia.mapper=DEBUG
 logging.level.jdbc.sqlonly=DEBUG
 logging.level.jdbc.sqltiming=DEBUG
 logging.level.jdbc.resultsettable=DEBUG

 logging.level.org.springframework.web.filter.CorsFilter=DEBUG

# OAuth2 로그인 설정 (카카오)
spring.security.oauth2.client.registration.kakao.client-id=45d35dd50e172ba65fada26c6602e27e
spring.security.oauth2.client.registration.kakao.client-secret=HJSWLLGAsHBCObvviTBTnH4RIEzNJghv
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://192.168.30.51:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# OAuth2 로그인 설정 (구글)

