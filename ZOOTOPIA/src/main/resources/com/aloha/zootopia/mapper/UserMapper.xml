<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aloha.zootopia.mapper.UserMapper">

  <!-- 사용자 전체 정보 + 권한 리스트 -->
  <resultMap id="UserMap" type="com.aloha.zootopia.domain.Users">
    <id property="userId" column="user_id"/>
    <result property="email" column="email"/>
    <result property="password" column="password"/>
    <result property="nickname" column="nickname"/>
    <result property="intro" column="intro"/>
    <result property="phone" column="phone"/>
    <result property="profileImg" column="profile_img"/>
    <result property="createdAt" column="created_at"/>
    <result property="enabled" column="enabled"/>
    <result property="status" column="status"/>
    <!-- 권한 목록은 email로 조회 -->
    <collection property="authList"
                ofType="com.aloha.zootopia.domain.UserAuth"
                select="selectAuth"
                column="email"/>
  </resultMap>

  <!-- 권한 매핑 -->
  <resultMap id="AuthMap" type="com.aloha.zootopia.domain.UserAuth">
    <!-- user_auth 구조: id(PK), email(FK), auth -->
    <result property="email" column="email"/>
    <result property="auth" column="auth"/>
  </resultMap>

  <!-- 회원 가입 -->
  <insert id="join" parameterType="com.aloha.zootopia.domain.Users">
    INSERT INTO users (email, password, nickname, phone)
    VALUES (#{email}, #{password}, #{nickname}, #{phone})
  </insert>

  <!-- 이메일 중복 확인 -->
  <select id="countByEmail" parameterType="string" resultType="int">
      SELECT COUNT(*) 
      FROM users 
      WHERE email = #{email}
  </select>

  <!-- 닉네임 중복 확인 -->
  <select id="countByNickname" parameterType="string" resultType="int">
      SELECT COUNT(*) FROM users WHERE nickname = #{nickname}
  </select>
  
  <!-- 사용자 단건 조회 (by email) -->
  <select id="select" resultMap="UserMap">
    SELECT *
    FROM users
    WHERE email = #{email}
  </select>

  <!-- 사용자 단건 조회 (by userId) -->
  <select id="selectById" resultMap="UserMap">
    SELECT *
    FROM users
    WHERE user_id = #{userId}
  </select>

  <!-- 사용자 권한 목록 조회 (email 기준) -->
  <select id="selectAuth" resultType="UserAuth">
    SELECT *
    FROM user_auth
    WHERE email = #{email}
  </select>

  <update id="updatePassword">
    UPDATE users
    SET password = #{password}
    WHERE user_id = #{userId}
  </update>

  <select id="findUserById" resultMap="UserMap">
    SELECT * FROM users WHERE user_id = #{userId}
  </select>

  <!-- 사용자 정보 수정 -->
  <update id="updateUser">
    UPDATE users
    SET nickname   = #{nickname},
        intro      = #{intro},
        phone      = #{phone},
        profile_img= #{profileImg}
    WHERE user_id = #{userId}
  </update>

  <!-- 사용자 권한 삭제 (email 기준) -->
  <delete id="deleteUserAuth">
    DELETE FROM user_auth
    WHERE email = #{email}
  </delete>

  <!-- 사용자 삭제 -->
  <delete id="deleteById" parameterType="long">
    DELETE FROM users WHERE user_id = #{userId}
  </delete>

  <!-- 소셜 로그인 사용자 정보 조회: 조인 키를 email로 변경 ★ -->
  <select id="findByProviderAndProviderId" resultMap="userWithRoles">
    SELECT u.*, a.auth
    FROM users u
    LEFT JOIN user_auth a
      ON a.email = u.email   <!-- 여기만 변경 -->
    WHERE u.provider   = #{provider}
      AND u.provider_id= #{providerId}
  </select>

  <insert id="insertSocialUser" parameterType="com.aloha.zootopia.domain.Users">
    INSERT INTO users (email, nickname, provider, provider_id, enabled, password)
    VALUES (#{email}, #{nickname}, #{provider}, #{providerId}, 1, #{password})
  </insert>

  <!-- 권한 등록 (email, auth) -->
  <insert id="insertAuth" parameterType="com.aloha.zootopia.domain.UserAuth">
    INSERT INTO user_auth (email, auth)
    VALUES (#{email}, #{auth})
  </insert>

  <!-- 소셜 사용자 + 권한 결과 매핑 -->
  <resultMap id="userWithRoles" type="com.aloha.zootopia.domain.Users">
    <id property="userId" column="user_id"/>
    <result property="email" column="email"/>
    <result property="nickname" column="nickname"/>
    <result property="provider" column="provider"/>
    <result property="providerId" column="provider_id"/>
    <collection property="authList" ofType="com.aloha.zootopia.domain.UserAuth">
      <result property="auth" column="auth"/>
    </collection>
  </resultMap>

</mapper>
