<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aloha.zootopia.mapper.CommentMapper">

  <resultMap id="CommentMap" type="com.aloha.zootopia.domain.Comment">
    <id property="commentId" column="comment_id" />
    <result property="content" column="content" />
    <result property="createdAt" column="created_at" />
    <result property="updatedAt" column="updated_at" />
    <result property="isDeleted" column="is_deleted" />
    <result property="userId" column="user_id" />
    <result property="postId" column="post_id" />
    <result property="nickname" column="nickname" />
    <result property="profileImg" column="profile_img" />
    <result property="postTitle" column="post_title"/>
    <result property="postCategory" column="post_category"/>  
  </resultMap>

  <!-- 일반 게시판 댓글 -->
  <select id="findByPostId" resultMap="CommentMap">
    SELECT c.*, u.nickname, u.profile_img
    FROM post_comments c
    LEFT JOIN users u ON c.user_id = u.user_id
    WHERE c.post_id = #{postId}
      AND c.is_deleted = FALSE
    ORDER BY  COALESCE(parent_id, comment_id),  
              parent_id IS NOT NULL,            
              created_at ASC
  </select>

  <insert id="insert" parameterType="com.aloha.zootopia.domain.Comment">
    INSERT INTO post_comments (content, user_id, post_id, created_at, parent_id)
    VALUES (#{content}, #{userId}, #{postId}, NOW(), #{parentId})
  </insert>

  <update id="softDelete">
    UPDATE post_comments
    SET is_deleted = TRUE, updated_at = NOW()
    WHERE comment_id = #{commentId}
  </update>

  <update id="updateContent">
    UPDATE post_comments
    SET content = #{content}, updated_at = NOW()
    WHERE comment_id = #{commentId}
  </update>

  <select id="findById" resultMap="CommentMap">
    SELECT c.*, u.nickname, u.profile_img
    FROM post_comments c
    LEFT JOIN users u ON c.user_id = u.user_id
    WHERE comment_id = #{commentId}
  </select>

  <!-- 유실동물 댓글 -->
  <select id="findLostByPostId" resultMap="CommentMap">
    SELECT c.*, u.nickname, u.profile_img
    FROM lost_animal_comments c
    LEFT JOIN users u ON c.user_id = u.user_id
    WHERE c.post_id = #{postId}
      AND c.is_deleted = FALSE
    ORDER BY  COALESCE(parent_id, comment_id),  
              parent_id IS NOT NULL,            
              created_at ASC
  </select>

  <insert id="insertLost" parameterType="com.aloha.zootopia.domain.Comment">
    INSERT INTO lost_animal_comments (content, user_id, post_id, created_at)
    VALUES (#{content}, #{userId}, #{postId}, NOW())
  </insert>

  <update id="softDeleteLost">
    UPDATE lost_animal_comments
    SET is_deleted = TRUE, updated_at = NOW()
    WHERE comment_id = #{commentId}
  </update>

  <delete id="deleteLostByPostId">
    DELETE FROM lost_animal_comments WHERE post_id = #{postId}
  </delete>

  <update id="updateLostContent">
    UPDATE lost_animal_comments
    SET content = #{content}, updated_at = NOW()
    WHERE comment_id = #{commentId}
  </update>

  <select id="findLostById" resultMap="CommentMap">
    SELECT c.*, u.nickname, u.profile_img
    FROM lost_animal_comments c
    LEFT JOIN users u ON c.user_id = u.user_id
    WHERE comment_id = #{commentId}
  </select>

  

</mapper>
